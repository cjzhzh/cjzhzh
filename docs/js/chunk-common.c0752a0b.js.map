{"version":3,"sources":["webpack:///./src/components/BlogBrief.vue?f5f5","webpack:///src/components/BlogBrief.vue","webpack:///./src/components/BlogBrief.vue?7e6c","webpack:///./src/components/BlogBrief.vue","webpack:///./src/components/BlogBrief.vue?24c4","webpack:///./src/components/TopBar.vue?c5ba","webpack:///src/components/TopBar.vue","webpack:///./src/components/TopBar.vue?4287","webpack:///./src/components/TopBar.vue","webpack:///./src/core/Utils.js","webpack:///./src/components/TopBar.vue?f8f1","webpack:///./src/core/markdownEngine/Engine.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","classification","filename","_v","_s","blogTitle","blogDetail","blogKeyword","blogDate","classificationName","staticRenderFns","lineIndex","Number","parseInt","fileContentList","component","class","hightLight","_l","key","JSON","stringify","Object","keys","values","folderName","showName","getBlogUnixTime","markdownFilePath","fetch","text","markdownFileContent","engine","Engine","blogHead","getBlogHead","date","unixTime","Date","getTime","getClassificationList","classificationList","classificationTxtLine","split","line","index","indexOf","slice","push","getBlogListByClassification","path","blogsTxtLine","filter","blogName","calculateBlogHead","contentMarkdown","reg","titleReg","dateReg","keywordReg","res","exec","title","trim","keyword","all","parse","calculateOneMarkdownLine","markdown","length","replace","match","p1","p2","calculateMultipleMarkdownLine","markdownDom","language","code","flag","quoteList","map","quote","join","tableDom","tableRules","tbody","i","rowList","item","content","rule","lastIndex","headDom","headList","console","log","calculateBlogContentDom","begin","markdownList","domList","currentLineIndex","doms","headMessage"],"mappings":"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","file":"js/chunk-common.c0752a0b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"blogBrief\"}},[_c('a',{attrs:{\"id\":\"blogTitle\",\"href\":'./blog.html?path='+_vm.classification+'&filename='+_vm.filename}},[_vm._v(_vm._s(_vm.blogTitle))]),_c('div',{attrs:{\"id\":\"blogDetail\"}},[_vm._v(_vm._s(_vm.blogDetail))]),_c('div',{attrs:{\"id\":\"blogHead\"}},[_c('div',{attrs:{\"id\":\"blogKeyword\"}},[_vm._v(\"关键词: \"+_vm._s(_vm.blogKeyword))]),_c('div',{attrs:{\"id\":\"blogDate\"}},[_vm._v(_vm._s(_vm.blogDate))]),_c('div',{attrs:{\"id\":\"classification\"}},[_vm._v(\"分类: \"+_vm._s(_vm.classificationName))])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"blogBrief\">\r\n        <a\r\n            id=\"blogTitle\"\r\n            :href=\"'./blog.html?path='+classification+'&filename='+filename\"\r\n        >{{blogTitle}}</a>\r\n        <div id=\"blogDetail\">{{blogDetail}}</div>\r\n        <div id=\"blogHead\">\r\n            <div id=\"blogKeyword\">关键词: {{blogKeyword}}</div>\r\n            <div id=\"blogDate\">{{blogDate}}</div>\r\n            <div id=\"classification\">分类: {{classificationName}}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Engine from \"../core/markdownEngine/Engine\";\r\nexport default {\r\n    name: \"BlogBrief\",\r\n    props: [\"classification\", \"filename\"],\r\n    data() {\r\n        return {\r\n            markdownFilePath: \"\",\r\n            blogTitle: \"\",\r\n            blogDetail: \"\",\r\n            blogDate: \"\",\r\n            blogKeyword: \"\",\r\n            classificationName: \"\",\r\n            engine: null\r\n        };\r\n    },\r\n    created() {\r\n        this.calculateData();\r\n    },\r\n    watch: {\r\n        markdownFilePath() {\r\n            this.calculateData();\r\n        }\r\n    },\r\n    methods: {\r\n        async calculateData() {\r\n            if (!this.markdownFilePath && this.engine) {\r\n                return;\r\n            }\r\n            this.markdownFilePath =\r\n                \"./blogs/\" + this.classification + \"/\" + this.filename;\r\n            let markdownFileContent = await (\r\n                await fetch(this.markdownFilePath)\r\n            ).text();\r\n            this.engine = new Engine(markdownFileContent);\r\n            let blogHead = this.engine.getBlogHead();\r\n            this.blogTitle = blogHead.title;\r\n            this.blogDate = blogHead.date;\r\n            this.blogKeyword = blogHead.keyword;\r\n            //计算博文分类名称\r\n            let classificationTxt = await (\r\n                await fetch(\"./blogs/name.txt\")\r\n            ).text();\r\n            let startIndex =\r\n                classificationTxt.indexOf(this.classification) +\r\n                this.classification.length +\r\n                1;\r\n            let endIndex = classificationTxt.indexOf(\"\\n\", startIndex);\r\n            this.classificationName = classificationTxt.slice(\r\n                startIndex,\r\n                endIndex\r\n            );\r\n\r\n            //计算博文开头内容\r\n            let blogDetail = \"\";\r\n\r\n            let contentBeginLineIndex;\r\n            let fileContentList = markdownFileContent.split(\"\\n\");\r\n            for (let lineIndex in fileContentList) {\r\n                lineIndex = Number.parseInt(lineIndex);\r\n                if (fileContentList[lineIndex].indexOf(\"*/\") !== -1) {\r\n                    contentBeginLineIndex = lineIndex + 1;\r\n                    break;\r\n                }\r\n            }\r\n            //取内容前5行作为博文简介\r\n            let count = 0;\r\n            for (\r\n                let lineIndex = contentBeginLineIndex;\r\n                count <= 5 && lineIndex < fileContentList.length;\r\n                lineIndex++, count++\r\n            ) {\r\n                //去除#号\r\n                let start;\r\n                for (let i = 0; i < fileContentList[lineIndex].length; i++) {\r\n                    if (fileContentList[lineIndex][i] !== \"#\") {\r\n                        start = i;\r\n                        break;\r\n                    }\r\n                }\r\n                blogDetail += fileContentList[lineIndex].slice(start);\r\n            }\r\n            this.blogDetail = blogDetail;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#blogBrief {\r\n    border-bottom: 1px solid gray;\r\n    padding: 1rem 1rem;\r\n    margin: 1rem;\r\n    box-shadow: 0 0 5px 0.1px grey;\r\n    border-radius: 0.2rem;\r\n    a {\r\n        text-decoration: none;\r\n        &:link {\r\n            color: black;\r\n            text-decoration: none;\r\n        }\r\n        &:visited {\r\n            color: black;\r\n            text-decoration: none;\r\n        }\r\n        &:hover {\r\n            color: black;\r\n            text-decoration: none;\r\n        }\r\n        &:active {\r\n            color: black;\r\n            text-decoration: none;\r\n        }\r\n    }\r\n    #blogTitle {\r\n        color: rgb(0, 102, 255);\r\n        font-size: 1.5rem;\r\n        font-weight: bold;\r\n    }\r\n    #blogDetail {\r\n        margin: 0.2rem 0 0.2rem 0;\r\n    }\r\n    #blogHead {\r\n        &::before {\r\n            content: \" \";\r\n            height: 1rem;\r\n            width: 100%;\r\n            display: block;\r\n            border-bottom: 1px dashed grey;\r\n            float: right;\r\n        }\r\n        #blogKeyword {\r\n            display: block;\r\n            \r\n        }\r\n        #blogDate {\r\n            margin-right: 1rem;\r\n            float:right\r\n        }\r\n\r\n        #classification {\r\n            display: inline-block;\r\n            margin-right: 1rem;\r\n        }\r\n        &::after {\r\n            content: \"\";\r\n            display: block;\r\n            height: 0;\r\n            clear: both;\r\n            visibility: hidden;\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlogBrief.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlogBrief.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BlogBrief.vue?vue&type=template&id=cac24c02&scoped=true&\"\nimport script from \"./BlogBrief.vue?vue&type=script&lang=js&\"\nexport * from \"./BlogBrief.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BlogBrief.vue?vue&type=style&index=0&id=cac24c02&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cac24c02\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlogBrief.vue?vue&type=style&index=0&id=cac24c02&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlogBrief.vue?vue&type=style&index=0&id=cac24c02&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"topbar\"}},[_c('a',{class:_vm.hightLight==='index'?'hight-light':'',attrs:{\"id\":\"classification\",\"href\":'./index.html'}},[_vm._v(\"首页\")]),_vm._l((_vm.classifications),function(classification){return _c('a',{key:JSON.stringify(classification),class:Object.keys(classification)[0]===_vm.hightLight?'hight-light':'',attrs:{\"id\":\"classification\",\"href\":'./classification.html?classification='+Object.keys(classification)[0]}},[_vm._v(_vm._s(Object.values(classification)[0]))])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"topbar\">\r\n        <a\r\n            id=\"classification\"\r\n            :class=\"hightLight==='index'?'hight-light':''\"\r\n            :href=\"'./index.html'\"\r\n        >首页</a>\r\n        <a\r\n            id=\"classification\"\r\n            v-for=\"classification of classifications\"\r\n            :key=\"JSON.stringify(classification)\"\r\n            :class=\"Object.keys(classification)[0]===hightLight?'hight-light':''\"\r\n            :href=\"'./classification.html?classification='+Object.keys(classification)[0]\"\r\n        >{{Object.values(classification)[0]}}</a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: [\"hightLight\"],\r\n    data() {\r\n        return {\r\n            name: \"TopBar\",\r\n            classifications: []\r\n        };\r\n    },\r\n    created() {\r\n        this.getClassifications();\r\n    },\r\n    methods: {\r\n        async getClassifications() {\r\n            if (this.classifications.length !== 0) return;\r\n            let classTxtContentList = (\r\n                await (await fetch(\"./blogs/name.txt\")).text()\r\n            ).split(\"\\n\");\r\n            for (let classStr of classTxtContentList) {\r\n                if (!/.+:.+/.test(classStr)) continue;\r\n                let folderName = classStr.slice(0, classStr.indexOf(\":\"));\r\n                let showName = classStr.slice(classStr.indexOf(\":\") + 1);\r\n                let classification = {};\r\n                classification[folderName] = showName;\r\n                this.classifications.push(classification);\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#topbar {\r\n    background: rgba(134, 205, 233, 0.5);\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    box-sizing: border-box;\r\n    width: 100vw;\r\n    padding: 0 10vw 0 10vw;\r\n    // margin: 0 10vw;\r\n    height: 3rem;\r\n    justify-content: flex-end;\r\n    box-shadow: 0 0 5px 0.1px;\r\n    backdrop-filter: blur(30px);\r\n    a {\r\n        color: black;\r\n        text-decoration:none;\r\n        &:link {\r\n            color: black;\r\n            text-decoration:none;\r\n        }\r\n        &:visited {\r\n            color: black;\r\n            text-decoration:none;\r\n        }\r\n        &:hover {\r\n            color: black;\r\n            text-decoration:none;\r\n        }\r\n        &:active {\r\n            color: black;\r\n            text-decoration:none;\r\n        }\r\n        \r\n    }\r\n\r\n    #classification {\r\n        display: inline-block;\r\n        \r\n        height: 1rem;\r\n        min-width: 2rem;\r\n        line-height: 1rem;\r\n        // margin: 1rem 1.5rem 1rem 1.5rem;\r\n        margin: 1rem 0.75rem 1rem 0.75rem;\r\n        transition: 200ms;\r\n        padding-bottom: 0.3rem;\r\n        &:first-child{\r\n            margin-right: auto;\r\n        }\r\n        &:hover {\r\n            color: rgb(30, 102, 210);\r\n            cursor: pointer;\r\n        }\r\n        &[class=\"hight-light\"] {\r\n            border-bottom: 2px solid grey;\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopBar.vue?vue&type=template&id=189da820&scoped=true&\"\nimport script from \"./TopBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TopBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopBar.vue?vue&type=style&index=0&id=189da820&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"189da820\",\n  null\n  \n)\n\nexport default component.exports","import Engine from \"./markdownEngine/Engine\"\r\nasync function getBlogUnixTime(classification, filename) {\r\n    let markdownFilePath = \"./blogs/\" + classification + \"/\" + filename;\r\n    let markdownFileContent = await (\r\n        await fetch(markdownFilePath)\r\n    ).text();\r\n    let engine = new Engine(markdownFileContent);\r\n    let blogHead;\r\n    try{\r\n    blogHead = engine.getBlogHead();\r\n    }catch(e){\r\n        return 999999999999\r\n    }\r\n    let blogDate = blogHead.date;\r\n    let unixTime = new Date(blogDate).getTime();\r\n    \r\n    return unixTime;\r\n}\r\n\r\nasync function getClassificationList(){\r\n    let classificationList=[];\r\n    let classificationTxtLine = (await (\r\n        await fetch(\"./blogs/name.txt\")\r\n    ).text()).split(\"\\n\");\r\n    for(let line of classificationTxtLine){\r\n        let index=line.indexOf(\":\");\r\n        if(index===-1)\r\n            continue;\r\n        let folderName=line.slice(0,index);\r\n        let showName=line.slice(index+1);\r\n        classificationList.push({folderName,showName});\r\n    }\r\n    return classificationList;\r\n}\r\n\r\nasync function getBlogListByClassification(classification){\r\n    let path=\"./blogs/\"+classification+\"/name.txt\";\r\n    let blogsTxtLine = (await (\r\n        await fetch(path)\r\n    ).text()).split(\"\\n\");\r\n    if(blogsTxtLine[0].indexOf(\"<!DOCTYPE html>\")!==-1)\r\n        return [];\r\n    return blogsTxtLine.filter((blogName)=>blogName!==\"\");\r\n}\r\n\r\nexport {getBlogUnixTime,getClassificationList,getBlogListByClassification}","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopBar.vue?vue&type=style&index=0&id=189da820&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopBar.vue?vue&type=style&index=0&id=189da820&lang=less&scoped=true&\"","\r\nfunction calculateBlogHead(contentMarkdown) {\r\n    //提取博文信息\r\n    let reg = /\\/\\*[\\w\\W]+?\\*\\//;\r\n    let titleReg = /title:[\\w\\W]+?\\n/;\r\n    let dateReg = /date:\\d\\d\\d\\d-\\d\\d-\\d\\d\\n/;\r\n    let keywordReg = /keyword:[\\w\\W]+?\\n/;\r\n    let res = reg.exec(contentMarkdown)[0];\r\n    let title = titleReg.exec(res) ? titleReg.exec(res)[0].trim() : null;\r\n    let date = dateReg.exec(res) ? dateReg.exec(res)[0].trim() : null;\r\n    let keyword = keywordReg.exec(res) ? keywordReg.exec(res)[0].trim() : null;\r\n    title = title ? \"\\\"\" + title.slice(0, 5) + \"\\\":\" + \"\\\"\" + title.slice(6) + \"\\\"\" : null;\r\n    date = date ? \"\\\"\" + date.slice(0, 4) + \"\\\":\" + \"\\\"\" + date.slice(5) + \"\\\"\" : null;\r\n    keyword = keyword ? \"\\\"\" + keyword.slice(0, 7) + \"\\\":\" + \"\\\"\" + keyword.slice(8) + \"\\\"\" : null;\r\n    let all = '{' + (title ? title + \",\" : '') + (date ? date + \",\" : '') + (keyword ? keyword : '') + '}'\r\n    return JSON.parse(all)\r\n}\r\n\r\nfunction calculateOneMarkdownLine(markdown) {\r\n\r\n    let reg, res;\r\n\r\n    //开始解析\r\n\r\n    \r\n    //换行\r\n    if (markdown === '')\r\n        return \"<br/>\"\r\n    \r\n    //分割线\r\n    if (markdown === '***' || markdown === '---')\r\n        return \"<hr/>\"\r\n\r\n    //#标题字体放大\r\n    reg = /^#+ /;\r\n    res = reg.exec(markdown);\r\n    if (res) {\r\n        markdown = ('<h' + (res[0].length - 1) + '>' + markdown.slice(res[0].length) + '</h' + (res[0].length - 1) + '>');\r\n    }\r\n\r\n\r\n    //粗体\r\n    reg = /\\*{2}(?!=\\*)[\\w\\W]+(?!=\\*)\\*{2}/\r\n    res = reg.exec(markdown);\r\n    if (res) {\r\n\r\n        markdown = markdown.replace(reg, '<b>' + res[0].slice(2, -2) + '</b>')\r\n\r\n    }\r\n    //斜体\r\n    reg = /\\*{1}(?!=\\*)[\\w\\W]+(?!=\\*)\\*{1}/\r\n    res = reg.exec(markdown);\r\n    if (res) {\r\n        markdown = markdown.replace(reg, '<i>' + res[0].slice(1, -1) + '</i>')\r\n    }\r\n\r\n    //删除线\r\n    reg = /~{1}(?!=~)[\\w\\W]+(?!=~)~{1}/\r\n    res = reg.exec(markdown);\r\n    if (res) {\r\n        markdown = markdown.replace(reg, '<s>' + res[0].slice(1, -1) + '</s>')\r\n    }\r\n\r\n    //无序列表 接多行计算函数\r\n    reg = /(^- (.+))|(^ {3}- (.+))/\r\n    res = reg.exec(markdown);\r\n    if (res && markdown.indexOf(\"|\")===-1) {\r\n   \r\n        if (markdown[2] === ' ') {\r\n            markdown = \"<uli>\" + markdown.slice(4) + \"</uli>\"\r\n        } else {\r\n            markdown = \"<uli>\" + markdown.slice(2) + \"</uli>\"\r\n        }\r\n    }\r\n\r\n    //有序列表 接多行计算函数\r\n    reg = /^(\\d)+\\. /\r\n    res = reg.exec(markdown);\r\n    if (res) {\r\n        markdown = \"<oli>\" + markdown.slice(res[0].length) + \"</oli>\"\r\n    }\r\n    //单个简短代码块\r\n    reg = /(?!<=`)`(?!=`)(([^`])+)(?!<=`)`(?!=`)/g\r\n    markdown=markdown.replace(/ /g,\"&nbsp;\");\r\n    markdown = markdown.replace(reg, (match, p1) => \"<code>\" + p1 + \"</code>\")\r\n\r\n    //图片\r\n    reg = /!\\[([\\w\\W]+)\\]\\(([\\w\\W]+)\\)/g\r\n    markdown = markdown.replace(reg, (match, p1, p2) => {\r\n        let res = \"<img src=\\\"\" + p2 + \"\\\" alt=\\\"\" + p1 + \"\\\"/>\"\r\n        return res;\r\n    })\r\n    \r\n    \r\n\r\n    //超链接\r\n    reg = /\\[([\\w\\W]+)\\]\\(([\\w\\W]+)\\)/g\r\n    markdown = markdown.replace(reg, (match, p1, p2) => \"<a src=\\\"\" + p2 + \"\\\">\" + p1 + \"</a>\")\r\n\r\n    return markdown;\r\n}\r\n\r\n//计算markdown多行规则\r\nfunction calculateMultipleMarkdownLine(markdownDom) {\r\n    let reg, res;\r\n\r\n\r\n    //无序列表\r\n    reg = /<uli>([\\w\\W]+)<\\/uli>+/g\r\n    markdownDom = markdownDom.replace(reg, (match) => {\r\n        let res = \"<ul>\" + match + \"</ul>\";\r\n        res = res.replace(/<uli>/g, \"<li>\");\r\n        res = res.replace(/<\\/uli>/g, \"</li>\");\r\n        return res;\r\n    })\r\n\r\n    //有序列表\r\n    reg = /<oli>([\\w\\W]+)<\\/oli>+/g\r\n    markdownDom = markdownDom.replace(reg, (match) => {\r\n        let res = \"<ol>\" + match + \"</ol>\";\r\n        res = res.replace(/<oli>/g, \"<li>\");\r\n        res = res.replace(/<\\/oli>/g, \"</li>\");\r\n        return res;\r\n    })\r\n\r\n    //多行代码块\r\n    reg = /```[\\w\\W]+```/g\r\n    markdownDom = markdownDom.replace(reg, (match) => {\r\n        match=match.replace(/ /g,\"&nbsp;\");\r\n        let language = match.slice(3, match.indexOf(\"\\n\"));\r\n        let code = match.slice(match.indexOf('\\n') + 1, -3);\r\n        code = code.replace(/\\n/g, \"<br/>\")\r\n        let res = \"<multiple-code>\" + \"<code-language>\" + language + \"</code-language>\" + code + \"</multiple-code>\"\r\n        return res;\r\n    })\r\n\r\n\r\n    //多行引用\r\n    reg = /((?<=\\n)>[^<^\\n]+\\n*)+/g\r\n    let flag = true;\r\n    while (flag) {\r\n        flag = false;\r\n        markdownDom = markdownDom.replace(reg, (match) => {\r\n            flag = true;\r\n            let quoteList = match.split(\"\\n\");\r\n            quoteList = quoteList.map((quote) => {\r\n                if (quote === \"\")\r\n                    return \"\";\r\n                if (quote[1] === '>') {\r\n                    return quote.slice(1)\r\n                }\r\n                return \"<p>\" + quote.slice(1) + \"</p>\"\r\n            })\r\n            res = \"<blockquote>\\n\" + quoteList.join(\"\\n\") + \"\\n</blockquote>\";\r\n            return res;\r\n        })\r\n\r\n    }\r\n\r\n    //表格\r\n    /*\r\n        name | 111 | 222 | 333 | 444\r\n        - | :-: | :-: | :-: | -:\r\n        aaa | bbb | ccc | ddd | eee| \r\n        fff | ggg| hhh | iii | 000|\r\n    */\r\n\r\n    reg = /((.+?\\|)+.+\\n*)+/g;\r\n    markdownDom = markdownDom.replace(reg, (match) => {\r\n        let res=match.split(\"\\n\");\r\n        let tableDom=\"<table>\"\r\n        let tableRules=[];\r\n        let tbody=\"<tbody>\"\r\n        for(let i=0;i<res.length;i++){\r\n            if(i===0){\r\n                let headDom=\"<tr>\" //表头\r\n                let headList=res[i].split(\"|\").map((item)=>item.trim())\r\n                headList.map((item)=>headDom+=\"<th>\"+item+\"</th>\")\r\n                headDom+=\"</tr>\"\r\n                tableDom+=headDom;\r\n                continue;\r\n            }\r\n            if(i===1){\r\n                \r\n                let rule=res[i].split(\"|\").map(item=>item.trim());\r\n                rule.map((item,index)=>{\r\n                    let lastIndex=item.length-1;\r\n                    if(item[0]===\":\"&&item[lastIndex]===\":\"){\r\n                        tableRules[index]=\"c\";\r\n                        return;\r\n                    }\r\n                    if(item[lastIndex]===\":\"){\r\n                        tableRules[index]=\"r\";\r\n                        return;\r\n                    }\r\n                    tableRules[index]=\"l\"\r\n                })\r\n                continue;\r\n                \r\n            }\r\n            \r\n            let rowList=res[i].split(\"|\").map((item)=>item.trim());\r\n            let content=\"<tr>\" //表格每一行内容\r\n            rowList.map((item,index)=>content+=\"<td style:\\\"text-align:\"+(tableRules[index]===\"c\"?\"center\":(tableRules[index]===\"r\"?\"right\":\"left\"))+\";\\\">\"+item+\"</td>\");\r\n            \r\n            content+=\"</tr>\";\r\n            tbody+=content;\r\n\r\n        }\r\n        tbody+=\"</tbody>\"\r\n        tableDom+=tbody;\r\n        tableDom+=\"</table>\"\r\n        console.log(tableDom);\r\n        \r\n        return tableDom;\r\n    })\r\n    return markdownDom;\r\n}\r\n\r\nfunction calculateBlogContentDom(contentMarkdown) {\r\n    let markdownList = contentMarkdown.split(\"\\n\");\r\n    let domList = [];\r\n    let begin;\r\n    //计算内容起始位置\r\n    for (let lineIndex in markdownList) {\r\n        if (markdownList[lineIndex].indexOf(\"*/\") !== -1) {\r\n            begin = Number.parseInt(lineIndex) + 1;\r\n            break;\r\n        }\r\n    }\r\n    //解析开始\r\n    let currentLineIndex = begin;\r\n    for (; currentLineIndex < markdownList.length; currentLineIndex++) {\r\n        let markdown = markdownList[currentLineIndex];\r\n        domList.push(calculateOneMarkdownLine(markdown))\r\n        console.log(calculateOneMarkdownLine(markdown))\r\n    }\r\n    let doms = calculateMultipleMarkdownLine(domList.join(\"\\n\"));\r\n    return doms;\r\n}\r\n\r\nclass Engine {\r\n    constructor(contentMarkdown) {\r\n        this.contentMarkdown = contentMarkdown;\r\n        this.headMessage = null;\r\n    }\r\n\r\n    getBlogHead() {\r\n        return this.headMessage ? this.headMessage : (this.headMessage = calculateBlogHead(this.contentMarkdown))\r\n    }\r\n\r\n    getBlogContentDom() {\r\n        return calculateBlogContentDom(this.contentMarkdown);\r\n    }\r\n\r\n}\r\n\r\nexport default Engine"],"sourceRoot":""}